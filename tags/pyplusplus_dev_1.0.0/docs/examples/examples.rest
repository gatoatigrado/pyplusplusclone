========
Examples
========

.. contents:: Table of contents

-------------------
Graphical interface
-------------------


`Py++`_ has nice, small and simple `graphical interface`_. Please, read
`tutorials`_ for more information.

.. _`graphical interface` : ./../documentation/tutorials/pyplusplus_gui.html
.. _`tutorials` : ./../documentation/tutorials/tutorials.html

---------
pyeasybmp
---------

`EasyBMP`_ is a small cross-platform library that provide you functionality
needed to work with Windows bitmap (BMP) image files. I took me only few minutes
to create Python bindings for the library. Read more `here`__.

..  __ : ./easybmp/easybmp.html

---------------
boost libraries
---------------

Boost provides free peer-reviewed portable C++ source libraries. Using `Py++`_ I
created Python bindings for few libraries:

  * `Boost.Date_Time`_
  * `Boost.CRC`_
  * `Boost.Rational`_
  * `Boost.Random`_

This is not "just another example". I went father and created new package:
`pyboost`_. This is fully working Python package, with almost all unit test from
the libraries ported to Python. For more information please read `pyboost`_
package documentation.

.. _`pyboost` : ./boost/boost.html

.. _`boost.date_time` : http://boost.org/doc/html/date_time.html
.. _`boost.crc` : http://boost.org/libs/crc/index.html
.. _`boost.rational` : http://boost.org/libs/rational/index.html
.. _`boost.random` : http://boost.org/libs/random/index.html

.. _`GUI`: ./../tutorials/pyplusplus_demo.png
.. _`Boost.Python`: http://www.boost.org/libs/python/doc/index.html
.. _`Py++` : ./../pyplusplus.html
.. _`EasyBMP`: http://easybmp.sourceforge.net/

